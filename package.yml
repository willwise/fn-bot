AWSTemplateFormatVersion: 2010-09-09
Description: fn-bot
Transform:
- AWS::Serverless-2016-10-31
Parameters:
  Workload:
    Type: String
    Default: dev
    Description: The type of workload (environment) that this stack will run
  OsApiKey:
    Type: String
    Default: mGvGWUtOi5aRYpACv6PyiofCOPkNOhPG
    Description: The key for the ordinance survey API
Resources:
  speakToCouncilFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/speakToCouncil/speak-to-council.speakToCouncil
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: A Lambda function that returns a static string.
      Policies:
      - AWSLambdaBasicExecutionRole
      - AmazonDynamoDBReadOnlyAccess
      Environment:
        Variables:
          OS_API_KEY:
            Fn::Sub:
            - ${OsApiKey}
            - OsApiKey:
                Ref: OsApiKey
          TABLE_NAME:
            Ref: fnBotServicesTable
          PLACE_TABLE_NAME:
            Ref: fnBotPlaceTable
      CodeUri: s3://fn-bot-sam-package/213475ea163a6801d457385d039e7c8d
  fnBotServicesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: ServiceName
        AttributeType: S
      KeySchema:
      - AttributeName: ServiceName
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  fnBotPlaceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: PlaceName
        AttributeType: S
      KeySchema:
      - AttributeName: PlaceName
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  bulkServiceUpload:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/bulkServiceUpload/bulk-upload.bulkUpload
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: A Lambda function that returns a static string.
      Policies:
      - AWSLambdaBasicExecutionRole
      - AmazonDynamoDBFullAccess
      - AmazonS3ReadOnlyAccess
      Environment:
        Variables:
          TABLE_NAME:
            Ref: fnBotServicesTable
          BUCKET:
            Ref: fnBotServicesBucket
      CodeUri: s3://fn-bot-sam-package/213475ea163a6801d457385d039e7c8d
  bulkPlaceUpload:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/bulkPlaceUpload/bulkPlaceUpload.bulkUpload
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: A Lambda function that returns a static string.
      Policies:
      - AWSLambdaBasicExecutionRole
      - AmazonDynamoDBFullAccess
      - AmazonS3ReadOnlyAccess
      Environment:
        Variables:
          TABLE_NAME:
            Ref: fnBotPlaceTable
          BUCKET:
            Ref: fnBotServicesBucket
      CodeUri: s3://fn-bot-sam-package/213475ea163a6801d457385d039e7c8d
  fnBotServicesBucket:
    Type: AWS::S3::Bucket
  fnBotUpdateSlots:
    Type: AWS::Serverless::Function
    Properties:
      Handler: rebuildBot.rebuildBot
      Runtime: nodejs12.x
      CodeUri: s3://fn-bot-sam-package/975a12598e1fbeba0f4bd3629e30f895
      Description: An Amazon DynamoDB trigger that logs the updates made to a table.
      MemorySize: 128
      Timeout: 23
      Policies:
      - CloudWatchFullAccess
      - AmazonDynamoDBFullAccess
      - AmazonLexFullAccess
      - AWSLambdaBasicExecutionRole
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - fnBotServicesTable
              - StreamArn
            BatchSize: 1
            StartingPosition: LATEST
      Environment:
        Variables:
          SLOT_NAME:
            Ref: serviceSlot
          INTENT_NAME:
            Ref: speakToCouncilIntent
          BOT_NAME:
            Ref: fnBot
  fnBotUpdatePlaceSlots:
    Type: AWS::Serverless::Function
    Properties:
      Handler: addPlaceSlots.rebuildBot
      Runtime: nodejs12.x
      CodeUri: s3://fn-bot-sam-package/56918fb7a2e8b93973446aa7fd9b1ebb
      Description: An Amazon DynamoDB trigger that logs the updates made to a table.
      MemorySize: 128
      Timeout: 23
      Policies:
      - CloudWatchFullAccess
      - AmazonDynamoDBFullAccess
      - AmazonLexFullAccess
      - AWSLambdaBasicExecutionRole
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - fnBotPlaceTable
              - StreamArn
            BatchSize: 1
            StartingPosition: LATEST
      Environment:
        Variables:
          SLOT_NAME:
            Ref: northamptonshirePlaceSlot
          INTENT_NAME:
            Ref: speakToCouncilIntent
          BOT_NAME:
            Ref: fnBot
  CreateFNBotSingleServicesRecord:
    Type: AWS::Serverless::Function
    Properties:
      Handler: createSingleItem.createSingleItem
      Runtime: nodejs12.x
      CodeUri: s3://fn-bot-sam-package/a6b33837cb46dae717b4157cef015934
      Description: ''
      MemorySize: 128
      Timeout: 3
      Policies:
      - AmazonDynamoDBFullAccess
      - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          TABLE_NAME:
            Ref: fnBotServicesTable
  serviceSlot:
    Type: Custom::LexSlotType
    Properties:
      ServiceToken:
        Fn::ImportValue: cfn-lex-slot-type-1-0-3-ServiceToken
      name:
        Fn::Sub:
        - ${AWS::StackName}_service_type_${Workload}
        - Workload:
            Ref: Workload
      description: a list of council services
      valueSelectionStrategy: TOP_RESOLUTION
      enumerationValues:
      - value: testing
        synonyms:
        - test
  northamptonshirePlaceSlot:
    Type: Custom::LexSlotType
    Properties:
      ServiceToken:
        Fn::ImportValue: cfn-lex-slot-type-1-0-3-ServiceToken
      name:
        Fn::Sub:
        - ${AWS::StackName}_place_${Workload}
        - Workload:
            Ref: Workload
      description: a list of northamptonshire places
      valueSelectionStrategy: TOP_RESOLUTION
      enumerationValues:
      - value: abcdefghi
        synonyms:
        - abcdefghij
  speakToCouncilIntent:
    Type: Custom::LexIntent
    DependsOn:
    - serviceSlot
    Properties:
      ServiceToken:
        Fn::ImportValue: cfn-lex-intent-1-0-3-ServiceToken
      name:
        Fn::Sub:
        - ${AWS::StackName}_speak_to_council_sam_${Workload}
        - Workload:
            Ref: Workload
      fulfillmentActivity:
        type: ReturnIntent
      dialogCodeHook:
        uri:
          Fn::GetAtt:
          - speakToCouncilFunction
          - Arn
        messageVersion: 1.0
      sampleUtterances:
      - I want {service}
      - I need order a {service}
      - I need to report {service}
      - I want to make a {service}
      - What day is my {service}
      - About getting {service}
      - Appeal a {service}
      - Apply for {service}
      - Apply to join the {service}
      - Applying for {service}
      - Are the {service}
      - Book a {service}
      - Book onto a {service}
      - Can I apply for {service}
      - Can you collect {service}
      - Collect a {service}
      - Does my tree have a {service}
      - Enquiring about {service}
      - Help with {service}
      - How do I {service}
      - How do I get a copy of my {service}
      - I am calling about {service}
      - I am calling about a {service}
      - I am calling about my {service}
      - I am calling about the {service}
      - I am ringing about {service}
      - I am ringing about a {service}
      - I am ringing about my {service}
      - I am ringing about the {service}
      - I cant afford to pay my {service}
      - I cant find my {service}
      - I cant pay my {service}
      - I have {service}
      - I have a {service}
      - I have a {service}
      - I have been given a {service}
      - I have been kicked out and need {service}
      - I have been made {service}
      - I have had a {service}
      - I have lost my {service}
      - I have made a mistake on my {service}
      - I have no {service}
      - I lost my {service}
      - I missed a call from my {service}
      - I missed my {service}
      - I need {service}
      - I need a {service}
      - I need a bigger {service}
      - I need a copy of my {service}
      - I need a new {service}
      - I need a refund on my {service}
      - I need an {service}
      - I need the opening times for my {service}
      - I need to {service}
      - I need to apply for {service}
      - I need to apply for a {service}
      - I need to book a {service}
      - I need to book in a {service}
      - I need to discuss my {service}
      - I need to find a {service}
      - I need to get {service}
      - I need to know who my {service}
      - I need to make a {service}
      - I need to order a {service}
      - I need to pay a {service}
      - I need to pay my {service}
      - I need to report {service}
      - I need to report a {service}
      - I need to report a missed {service}
      - I need to speak to {service}
      - I need to speak to an {service}
      - I need to speak to my {service}
      - I need to speak to my personal assistant in {service}
      - I need to speak to some one about giving {service}
      - I need to speak to some one about my {service}
      - I need to speak to someone in {service}
      - I need to speak to the {service}
      - I need to speak with {service}
      - I require {service}
      - I require a {service}
      - I said {service}
      - I want a copy of my {service}
      - I want to add my partner to my {service}
      - I want to attend a {service}
      - I want to book a {service}
      - I want to book onto an {service}
      - I want to cancel my {service}
      - I want to claim {service}
      - I want to complain about my {service}
      - I want to do a {service}
      - I want to find the number of my local {service}
      - I want to get {service}
      - I want to get through to {service}
      - I want to know what {service}
      - I want to make a {service}
      - I want to pay a {service}
      - I want to pay my {service}
      - I want to register to {service}
      - I want to report {service}
      - I want to report a {service}
      - I want to report my neighbour for {service}
      - I want to run a stall on the {service}
      - I want to set up a direct debit for my {service}
      - I want to speak to {service}
      - I want to speak to your {service}
      - I want to speak with my {service}
      - I want to subscribe for {service}
      - I want to terminate my {service}
      - I want you to collect an old {service}
      - I would like apply for a {service}
      - I would like to {service}
      - I would like to ask a few questions about the {service}
      - I would like to be ommited from the {service}
      - I would like to book a {service}
      - I would like to claim {service}
      - I would like to discuss {service}
      - I would like to discuss {service}
      - I would like to get rid of my {service}
      - I would like to know if a {service}
      - I would like to leave {service}
      - I would like to leave a {service}
      - I would like to pay my {service}
      - I would like to report a {service}
      - I would like to report that {service}
      - I would like to speak to my {service}
      - I would like to speak to someone about {service}
      - I'd like to {service}
      - Id like to apply for a {service}
      - Id like to apply for an {service}
      - I'd like to book a {service}
      - I'd like to book a room in the {service}
      - I'd like to buy a season ticket for the {service}
      - I'd like to buy my {service}
      - I'd like to check on my {service}
      - I'd like to host an {service}
      - I'd like to know where I came in the {service}
      - I'd like to make a {service}
      - I'd like to register my {service}
      - I'd like to rent a {service}
      - I'd like to report {service}
      - I'd like to report a company to {service}
      - I'd like to report an {service}
      - I'd like to subscribe to the {service}
      - I'd like too book a {service}
      - I'm calling about {service}
      - I'm calling about my {service}
      - I'm calling to make a {service}
      - I'm locked out of my {service}
      - Information about the {service}
      - Information on {service}
      - It wont let me {service}
      - I've been given a fine for {service}
      - I've seen some {service}
      - Make a {service}
      - Missed {service}
      - My {service}
      - My neighbour is causing issues and I need to report {service}
      - My neighbour keeps {service}
      - My neighbours are making {service}
      - My parking {service}
      - My road is {service}
      - My road needs {service}
      - My street is full of {service}
      - Need help on my {service}
      - Our group would like to apply for a {service}
      - Overpayment of {service}
      - Paused my {service}
      - Pay my {service}
      - Paying an {service}
      - Paying my {service}
      - Payment of {service}
      - Renewing my {service}
      - Report {service}
      - Report a {service}
      - Setting up a {service}
      - Tell you about a {service}
      - The road has a {service}
      - The service that deals with {service}
      - There are {service}
      - There is {service}
      - There is a {service}
      - They haven't collected my {service}
      - They haven't cut my {service}
      - To get a {service}
      - To make a {service}
      - Up date on my {service}
      - Want to rent a {service}
      - What can I put in my {service}
      - What time do the {service}
      - What time does the {service}
      - When are {service}
      - When are the {service}
      - When is {service}
      - When is my {service}
      - When is {service}
      - When will my {service}
      - You have missed my {service}
      slots:
      - name: service
        description: what service do you want
        priority: 1
        slotConstraint: Required
        slotType:
          Ref: serviceSlot
        slotTypeVersion: $LATEST
        valueElicitationPrompt:
          maxAttempts: 2
          messages:
          - content: What service do you want?
            contentType: PlainText
      - name: northamptonshirePlaceSlot
        description: places in northamptonshire
        priority: 2
        slotConstraint: Optional
        slotType:
          Ref: northamptonshirePlaceSlot
        slotTypeVersion: $LATEST
        valueElicitationPrompt:
          maxAttempts: 2
          messages:
          - content: What is the location of the issue?
            contentType: PlainText
  fnBot:
    Type: Custom::LexBot
    DependsOn:
    - speakToCouncilIntent
    Properties:
      ServiceToken:
        Fn::ImportValue: cfn-lex-bot-1-0-4-ServiceToken
      name:
        Fn::Sub:
        - ${AWS::StackName}fn_bot_sam_${Workload}
        - Workload:
            Ref: Workload
      abortStatement:
        messages:
        - content: I dont understand
          contentType: PlainText
      childDirected: false
      clarificationPrompt:
        maxAttempts: 1
        messages:
        - content: I'm sorry, I didn't hear that. Can you repeate what you just said?
          contentType: PlainText
      description: BOT
      voiceId: Joanna
      idleSessionTTLInSeconds: 300
      intents:
      - intentName:
          Ref: speakToCouncilIntent
        intentVersion: $LATEST
      locale: en-US
      processBehavior: BUILD
  fnBotPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - speakToCouncilFunction
        - Arn
      Principal: lex.amazonaws.com
